{"version":3,"sources":["Components/Notification/Notification.module.css","Components/Container/Container.module.css","Components/Statistics/Statistics.module.css","Components/FeedbackOptions/FeedbackOptions.js","Components/Statistics/Statistics.js","Components/Notification/Notification.js","Components/Section/Section.js","Components/Container/Container.js","Components/FeedBack/FeedBack.js","App.js","index.js","Components/Section/Section.module.css","Components/FeedbackOptions/FeedBackOptions.module.css"],"names":["module","exports","FeedbackOptions","options","onLeaveFeedback","map","option","index","className","styles","btn","type","name","onClick","toString","Statistics","good","neutral","bad","total","positivePercentage","list","item","Notification","message","Section","title","children","section","Container","FeedBack","state","props","initialValue","e","target","setState","prevState","countTotalFeedback","countPositiveFeedbackPercentage","toFixed","Object","keys","this","Component","defaultProps","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gIACAA,EAAOC,QAAU,CAAC,QAAU,gC,mBCA5BD,EAAOC,QAAU,CAAC,UAAY,+B,kBCA9BD,EAAOC,QAAU,CAAC,WAAa,+BAA+B,KAAO,yBAAyB,KAAO,yBAAyB,WAAa,iC,4JC2B5HC,EAvBS,SAAC,GAAD,IAAEC,EAAF,EAAEA,QAASC,EAAX,EAAWA,gBAAX,OACpB,8BACKD,EAAQE,KAAI,SAACC,EAAQC,GAAT,OACT,wBACIC,UAAWC,IAAOC,IAElBC,KAAK,SACLC,KAAMN,EACNO,QAAST,EALb,SAOKE,GALIC,EAAMO,kB,gBCSZC,EAfI,SAAC,GAAD,IAAEC,EAAF,EAAEA,KAAMC,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,IAAKC,EAAtB,EAAsBA,MAAOC,EAA7B,EAA6BA,mBAA7B,OACX,qBAAIZ,UAAWC,IAAOY,KAAtB,UACE,qBAAKb,UAAWC,IAAOa,KAAvB,mBAAoCN,KACpC,qBAAKR,UAAWC,IAAOa,KAAvB,sBAAuCL,KACvC,qBAAKT,UAAWC,IAAOa,KAAvB,kBAAmCJ,KACnC,qBAAKV,UAAWC,IAAOa,KAAvB,oBAAqCH,KACrC,qBAAKX,UAAWC,IAAOa,KAAvB,gCAAiDF,EAAjD,W,iBCEKG,EARM,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OACjB,oBAAIhB,UAAWC,IAAOe,QAAtB,SAAgCA,K,gBCWrBC,EAZC,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAV,OACd,0BAASnB,UAAWC,IAAOmB,QAA3B,UACE,oBAAIpB,UAAWC,IAAOiB,MAAtB,SAA8BA,IAC7BC,M,yBCIUE,EANG,SAAC,GAAD,IAAEF,EAAF,EAAEA,SAAF,OAAgB,qBAAKnB,UAAWC,IAAOoB,UAAvB,SAAmCF,KCO/DG,E,4MAUJC,MAAQ,CACNf,KAAM,EAAKgB,MAAMC,aACjBhB,QAAS,EAAKe,MAAMC,aACpBf,IAAK,EAAKc,MAAMC,c,EAIlB7B,gBAAkB,SAAC8B,GACjB,IAAOtB,EAAQsB,EAAEC,OAAVvB,KAEP,EAAKwB,UAAS,SAACC,GAAD,sBACbzB,EAAOyB,EAAUzB,GAAQ,O,EAG5B0B,mBAAqB,kBAAM,EAAKP,MAAMf,KAAO,EAAKe,MAAMd,QAAU,EAAKc,MAAMb,K,EAE7EqB,gCAAkC,kBACF,IAA9B,EAAKD,qBAA6B,GAAwB,IAAlB,EAAKP,MAAMf,KAAc,EAAKsB,sBAAsBE,W,4CAG9F,WACE,IAAMrC,EAAUsC,OAAOC,KAAKC,KAAKZ,OACjC,EAA6BY,KAAKZ,MAA3Bf,EAAP,EAAOA,KAAMC,EAAb,EAAaA,QAASC,EAAtB,EAAsBA,IAEtB,OAEE,eAAC,EAAD,WACE,cAAC,EAAD,CAASQ,MAAM,uBAAf,SACE,cAAC,EAAD,CACEvB,QAASA,EACTC,gBAAiBuC,KAAKvC,oBAG1B,cAAC,EAAD,CAASsB,MAAM,aAAf,SACiC,IAA9BiB,KAAKL,qBACJ,cAAC,EAAD,CAAcd,QAAQ,sBACtB,cAAC,EAAD,CACER,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOwB,KAAKL,qBACZlB,mBAAoBuB,KAAKJ,6C,GAnDhBK,aAAjBd,EAEGe,aAAe,CACpBZ,aAAc,GAwDHH,QC5DAgB,G,YANH,kBACR,mCACE,cAAC,EAAD,CAAUb,aAAc,QCH9Bc,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCP1BnD,EAAOC,QAAU,CAAC,QAAU,yBAAyB,MAAQ,yB,kBCA7DD,EAAOC,QAAU,CAAC,IAAM,gC","file":"static/js/main.2a040564.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Notification_message__11ehd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Container_Container__3ac9f\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Statistics\":\"Statistics_Statistics__3W_wo\",\"list\":\"Statistics_list__ph4G3\",\"item\":\"Statistics_item__ypmJh\",\"stats_list\":\"Statistics_stats_list__1vD0Y\"};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './FeedBackOptions.module.css';\r\n\r\n\r\nconst FeedbackOptions = ({options, onLeaveFeedback}) => (\r\n    <div>\r\n        {options.map((option, index) => (\r\n            <button\r\n                className={styles.btn}\r\n                key={index.toString()}\r\n                type=\"button\"\r\n                name={option}\r\n                onClick={onLeaveFeedback}\r\n            >\r\n                {option}\r\n            </button>)\r\n        )\r\n        }\r\n    </div>\r\n);\r\n\r\nFeedbackOptions.propTypes = {\r\n    options: PropTypes.arrayOf(\r\n      PropTypes.string.isRequired),\r\n    onLeaveFeedback: PropTypes.func.isRequired,\r\n  };\r\n\r\nexport default FeedbackOptions;","import React from 'react';\r\nimport styles from './Statistics.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Statistics = ({good, neutral, bad, total, positivePercentage}) => (\r\n        <ul className={styles.list}>\r\n          <li  className={styles.item}>Good: {good}</li>\r\n          <li  className={styles.item}>Neutral: {neutral}</li>\r\n          <li  className={styles.item}>Bad: {bad}</li>\r\n          <li  className={styles.item}>Total: {total}</li>\r\n          <li  className={styles.item}>Positive feedback: {positivePercentage}%</li>\r\n        </ul>\r\n  );\r\n\r\nStatistics.propTypes = {\r\n  \r\n  prop: PropTypes.arrayOf(PropTypes.number.isRequired),\r\n}\r\n\r\nexport default Statistics;","import React from 'react';\r\nimport PropTypes from 'prop-types'\r\nimport styles from './Notification.module.css'\r\n\r\nconst Notification = ({ message }) => (\r\n    <h3 className={styles.message}>{message}</h3>\r\n);\r\n\r\nNotification.propTypes = {\r\n    message: PropTypes.string.isRequired,\r\n} \r\n\r\nexport default Notification","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Section.module.css';\r\n\r\nconst Section = ({ title, children }) => (\r\n  <section className={styles.section}>\r\n    <h2 className={styles.title}>{title}</h2>\r\n    {children}\r\n  </section>\r\n);\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\nexport default Section;","import { div } from 'prelude-ls';\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from  './Container.module.css';\r\n\r\nconst Container = ({children}) => <div className={styles.Container}>{children}</div>;\r\n\r\nContainer.propTypes = {\r\n    children: PropTypes.node.isRequired,\r\n  };\r\n\r\nexport default Container;","\r\n\r\nimport React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport FeedBackOptions from '../FeedbackOptions';\r\nimport Statistics from '../Statistics';\r\nimport Notification from '../Notification';\r\nimport Section from '../Section';\r\nimport Container from '../Container';\r\n\r\n\r\n\r\nclass FeedBack extends Component {\r\n  \r\n  static defaultProps = {\r\n    initialValue: 0\r\n  }\r\n\r\n  static propTypes = {\r\n    initialValue: PropTypes.number.isRequired,\r\n  } \r\n\r\n  state = {\r\n    good: this.props.initialValue,\r\n    neutral: this.props.initialValue,\r\n    bad: this.props.initialValue\r\n  };\r\n\r\n \r\n  onLeaveFeedback = (e) => {\r\n    const {name} = e.target\r\n    \r\n    this.setState((prevState) => ({\r\n    [name]: prevState[name] + 1}))\r\n  };\r\n\r\n  countTotalFeedback = () => this.state.good + this.state.neutral + this.state.bad;\r\n\r\n  countPositiveFeedbackPercentage = () =>\r\n    this.countTotalFeedback() === 0 ? 0 : ((this.state.good * 100) / this.countTotalFeedback()).toFixed();\r\n\r\n\r\n  render() {\r\n    const options = Object.keys(this.state);\r\n    const {good, neutral, bad} = this.state;\r\n    \r\n    return (\r\n\r\n      <Container>\r\n        <Section title=\"Pleas leave feedback\">\r\n          <FeedBackOptions\r\n            options={options}\r\n            onLeaveFeedback={this.onLeaveFeedback}\r\n          />\r\n        </Section>\r\n        <Section title=\"Statistics\">\r\n          {this.countTotalFeedback() === 0 ?\r\n            <Notification message=\"No feedback given\" /> :\r\n            <Statistics\r\n              good={good}\r\n              neutral={neutral}\r\n              bad={bad}\r\n              total={this.countTotalFeedback()}\r\n              positivePercentage={this.countPositiveFeedbackPercentage()}/>\r\n          }\r\n        </Section>\r\n      </Container>\r\n    )\r\n  }\r\n}\r\n\r\nexport default FeedBack;","import React from 'react';\r\nimport FeedBack from './Components/FeedBack';\r\nimport 'modern-normalize/modern-normalize.css';\r\nimport './styles.css';\r\n\r\nconst App = () => (\r\n    <>\r\n      <FeedBack initialValue={0}/>\r\n    </>\r\n  );\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__3Td3Y\",\"title\":\"Section_title__3h9bM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"FeedBackOptions_btn__WJnhg\"};"],"sourceRoot":""}